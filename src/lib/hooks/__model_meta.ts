/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

const metadata = {
    models: {
        list: {
            name: 'List', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, owner: {
                    name: "owner",
                    type: "User",
                    isDataModel: true,
                    backLink: 'list',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "ownerId" },
                }, ownerId: {
                    name: "ownerId",
                    type: "String",
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$List$ownerId,
                    isForeignKey: true,
                    relationField: 'owner',
                }, title: {
                    name: "title",
                    type: "String",
                }, private: {
                    name: "private",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, todos: {
                    name: "todos",
                    type: "Todo",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'list',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            }
            ,
        }
        ,
        todo: {
            name: 'Todo', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, owner: {
                    name: "owner",
                    type: "User",
                    isDataModel: true,
                    backLink: 'todo',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "ownerId" },
                }, ownerId: {
                    name: "ownerId",
                    type: "String",
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Todo$ownerId,
                    isForeignKey: true,
                    relationField: 'owner',
                }, list: {
                    name: "list",
                    type: "List",
                    isDataModel: true,
                    backLink: 'todos',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "listId" },
                }, listId: {
                    name: "listId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'list',
                }, title: {
                    name: "title",
                    type: "String",
                }, completedAt: {
                    name: "completedAt",
                    type: "DateTime",
                    isOptional: true,
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            }
            ,
        }
        ,
        user: {
            name: 'User', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                    isOptional: true,
                }, email: {
                    name: "email",
                    type: "String",
                    isOptional: true,
                }, password: {
                    name: "password",
                    type: "String",
                }, todo: {
                    name: "todo",
                    type: "Todo",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'owner',
                }, list: {
                    name: "list",
                    type: "List",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'owner',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, email: {
                    name: "email",
                    fields: ["email"]
                },
            }
            ,
        }
        ,
    }
    ,
    deleteCascade: {
        list: ['Todo'],
        user: ['List', 'Todo'],
    }
    ,
    authModel: 'User'
};
function $default$List$ownerId(user: any): unknown {
    return user?.id;
}

function $default$Todo$ownerId(user: any): unknown {
    return user?.id;
}
export default metadata;
